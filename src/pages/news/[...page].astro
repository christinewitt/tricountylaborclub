---
import { contentfulClient } from '../../lib/contentful';
import Card from '../../components/Card.astro';
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import FeatureLineItem from '../../components/FeatureLineItem.astro';
import Pagination from '../../components/Pagination.astro';
import type { News } from '../../lib/contentful';

export async function getStaticPaths({ paginate }) {
  const { items } = await contentfulClient.getEntries<News>({
    content_type: 'news',
  });

  const pages = items.map((item) => ({
    postImage: item.fields.postImage.fields?.file.url,
    postImageDescription: item.fields.postImage.fields.description,
    slug: item.fields.slug,
    postTitle: item.fields.postTitle,
    postDate: new Date(item.fields.postDate).toLocaleDateString('en-US', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    }),
  }));

  const sortedData = pages.sort((a, b) => {
    const dateA = new Date(a.postDate);
    const dateB = new Date(b.postDate);
    return +dateA + +dateB;
  });

  return paginate(sortedData, { pageSize: 9 });
}

const { page } = Astro.props;
---

<DefaultLayout
  title='News'
  description='Stay up to date on the latest news from Tri-County'
>
  <section class='section'>
    <div class='space-content container'>
      <h1>News</h1>
      <p class='intro'></p>
    </div>
  </section>
  <section class='section'>
    <div class='container'>
      <p class='text-sm'>
        <em
          >Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em
        >
      </p>
      <ul class='my-3'>
        {
          page.data.map((post) => (
            <li>
              <Card
                img={post.postImage}
                postImageDescription={post.postImageDescription}
                title={post.postTitle}
                url={'/news/' + post.slug}
              >
                <FeatureLineItem
                  field={post.postDate}
                  image='/icons/calendar.svg'
                />
              </Card>
            </li>
          ))
        }
      </ul>
      <div class='pagination'>
        <Pagination
          firstPage={page.url.prev ? '/events' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next
            ? `/events/${Math.round(page.total / page.size)}`
            : null}
          currentPage={page.currentPage}
          totalPages={Math.ceil(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style>
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .section {
    margin-top: 3rem;
    margin-bottom: 3rem;
  }

  .intro {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .pagination {
    display: grid;
    place-content: center;
    margin-top: 3rem;
  }
</style>
